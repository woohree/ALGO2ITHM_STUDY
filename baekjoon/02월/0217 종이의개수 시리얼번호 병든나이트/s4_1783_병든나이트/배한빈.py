# 80분 소요
# N x M 크기 체스판의 가장 왼쪽 아래에 위치
# 2칸 위로, 1칸 오른쪽
# 1칸 위로, 2칸 오른쪽
# 1칸 아래로, 2칸 오른쪽
# 2칸 아래로, 1칸 오른쪽
# 0 <= <N, M <= 2,000,000,000

# 처음에 체스판은 이중리스트로  선언해서 좌표식으로 푸는줄 알았는데
# 아닌거같다고 생각 들었고, 경우의 수로 접근했다.

import sys
sys.stdin = open('input.txt')

N, M = map(int, input().split())

if N == 1 or M == 1:  # N이나 M이 1이면 이동할 곳이 없으므로 무조건 1
    answer = 1

elif N == 2:  # N이 2일 때는
    if M == 2:  # M이 2면 답은 무조건 1
        answer = 1
    # 체스가 4번 이상 이동하기 전 단계이므로 방법 상관없이 이동 가능한 경우 계산
    elif 3 <= M <= 7:
        if M % 2:
            answer = int(M / 2) + 1
        else:
            answer = int(M / 2)
    # N == 2일 때는 1, 4번이 수행하기 힘들다.
    # 체스가 4번 이상 이동하려면 이동하는 4가지 방법을 전부 수행해야 하므로 불가능
    # 따라서 M이 7을 넘어가더라도 더이상 움직일 수 없으므로 answer는 4로 고정된다.
    else:
        answer = 4
# N이 3 이상일 때
else:
    # M 이 2,3,4일 때 가능한 경우는 M과 같다.
    if 1 < M < 5:
        answer = M
    # M이 5,6일 때는 체스가 4번 이상 이동할 수 있는 경우가 생기므로
    # 4가지 방법을 수행해야 하지만 3가지 밖에 수행되지 않으므로 답이 4다.
    elif M == 5 or M == 6:
        answer = 4
    # M이 7보다 클때는 4사지 방법을 모두 수행하고 난 다음에는 어떻게 움직이든
    # 상관 없으므로 M-2라는 결과식이 나온다.
    else:
        answer = M - 2

print(answer)
